{"ast":null,"code":"export const codes=[// FizzBuzz in all languages\n{id:1,title:'FizzBuzz',code:'for(let i=1; i<=100; i++) { console.log(i % 3 === 0 ? \"Fizz\" : i % 5 === 0 ? \"Buzz\" : i) }',difficulty:'easy',language:'JavaScript'},{id:2,title:'FizzBuzz',code:'for i in range(1, 101):\\n    if i % 3 == 0 and i % 5 == 0:\\n        print(\"FizzBuzz\")\\n    elif i % 3 == 0:\\n        print(\"Fizz\")\\n    elif i % 5 == 0:\\n        print(\"Buzz\")\\n    else:\\n        print(i)',difficulty:'easy',language:'Python'},{id:3,title:'FizzBuzz',code:'#include <iostream>\\nusing namespace std;\\nint main() {\\n    for (int i = 1; i <= 100; i++) {\\n        if (i % 3 == 0 && i % 5 == 0)\\n            cout << \"FizzBuzz\\\\n\";\\n        else if (i % 3 == 0)\\n            cout << \"Fizz\\\\n\";\\n        else if (i % 5 == 0)\\n            cout << \"Buzz\\\\n\";\\n        else\\n            cout << i << \"\\\\n\";\\n    }\\n    return 0;\\n}',difficulty:'easy',language:'C++'},// Two Sum in all languages\n{id:4,title:'Two Sum',code:'function twoSum(nums, target) {\\n    const map = new Map();\\n    for (let i = 0; i < nums.length; i++) {\\n        const complement = target - nums[i];\\n        if (map.has(complement)) {\\n            return [map.get(complement), i];\\n        }\\n        map.set(nums[i], i);\\n    }\\n    return [];\\n}',difficulty:'medium',language:'JavaScript'},{id:5,title:'Two Sum',code:'def two_sum(nums, target):\\n    seen = {}\\n    for i, num in enumerate(nums):\\n        complement = target - num\\n        if complement in seen:\\n            return [seen[complement], i]\\n        seen[num] = i\\n    return []',difficulty:'medium',language:'Python'},{id:6,title:'Two Sum',code:'#include <unordered_map>\\n#include <vector>\\nusing namespace std;\\nvector<int> twoSum(vector<int>& nums, int target) {\\n    unordered_map<int, int> map;\\n    for (int i = 0; i < nums.size(); i++) {\\n        int complement = target - nums[i];\\n        if (map.find(complement) != map.end()) {\\n            return {map[complement], i};\\n        }\\n        map[nums[i]] = i;\\n    }\\n    return {};\\n}',difficulty:'medium',language:'C++'},// Palindrome ---------------\n{id:6,title:'Palindrome',code:'class Solution(object): def isPalindrome(self, x): \\nif x < 0:\\n return False \\noriginal = x\\n   reversed_num = 0  \\nwhile x > 0:\\n last_digit = x % 10 \\nreversed_num = reversed_num * 10 + last_digit \\n x = x // 10 \\n return original == reversed_num',difficulty:'easy',language:'Python'}// Add more problems like Binary Search, Knapsack Problem, etc., for all languages\n];","map":{"version":3,"names":["codes","id","title","code","difficulty","language"],"sources":["C:/Users/sattu/OneDrive/Desktop/Program/DSA_WWEB/dsa/src/data.js"],"sourcesContent":["export const codes = [\r\n    // FizzBuzz in all languages\r\n    {\r\n      id: 1,\r\n      title: 'FizzBuzz',\r\n      code: 'for(let i=1; i<=100; i++) { console.log(i % 3 === 0 ? \"Fizz\" : i % 5 === 0 ? \"Buzz\" : i) }',\r\n      difficulty: 'easy',\r\n      language: 'JavaScript',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'FizzBuzz',\r\n      code: 'for i in range(1, 101):\\n    if i % 3 == 0 and i % 5 == 0:\\n        print(\"FizzBuzz\")\\n    elif i % 3 == 0:\\n        print(\"Fizz\")\\n    elif i % 5 == 0:\\n        print(\"Buzz\")\\n    else:\\n        print(i)',\r\n      difficulty: 'easy',\r\n      language: 'Python',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'FizzBuzz',\r\n      code: '#include <iostream>\\nusing namespace std;\\nint main() {\\n    for (int i = 1; i <= 100; i++) {\\n        if (i % 3 == 0 && i % 5 == 0)\\n            cout << \"FizzBuzz\\\\n\";\\n        else if (i % 3 == 0)\\n            cout << \"Fizz\\\\n\";\\n        else if (i % 5 == 0)\\n            cout << \"Buzz\\\\n\";\\n        else\\n            cout << i << \"\\\\n\";\\n    }\\n    return 0;\\n}',\r\n      difficulty: 'easy',\r\n      language: 'C++',\r\n    },\r\n  \r\n    // Two Sum in all languages\r\n    {\r\n      id: 4,\r\n      title: 'Two Sum',\r\n      code: 'function twoSum(nums, target) {\\n    const map = new Map();\\n    for (let i = 0; i < nums.length; i++) {\\n        const complement = target - nums[i];\\n        if (map.has(complement)) {\\n            return [map.get(complement), i];\\n        }\\n        map.set(nums[i], i);\\n    }\\n    return [];\\n}',\r\n      difficulty: 'medium',\r\n      language: 'JavaScript',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Two Sum',\r\n      code: 'def two_sum(nums, target):\\n    seen = {}\\n    for i, num in enumerate(nums):\\n        complement = target - num\\n        if complement in seen:\\n            return [seen[complement], i]\\n        seen[num] = i\\n    return []',\r\n      difficulty: 'medium',\r\n      language: 'Python',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Two Sum',\r\n      code: '#include <unordered_map>\\n#include <vector>\\nusing namespace std;\\nvector<int> twoSum(vector<int>& nums, int target) {\\n    unordered_map<int, int> map;\\n    for (int i = 0; i < nums.size(); i++) {\\n        int complement = target - nums[i];\\n        if (map.find(complement) != map.end()) {\\n            return {map[complement], i};\\n        }\\n        map[nums[i]] = i;\\n    }\\n    return {};\\n}',\r\n      difficulty: 'medium',\r\n      language: 'C++',\r\n    },\r\n\r\n    // Palindrome ---------------\r\n    {\r\n        id: 6,\r\n        title: 'Palindrome',\r\n        code: 'class Solution(object): def isPalindrome(self, x): \\nif x < 0:\\n return False \\noriginal = x\\n   reversed_num = 0  \\nwhile x > 0:\\n last_digit = x % 10 \\nreversed_num = reversed_num * 10 + last_digit \\n x = x // 10 \\n return original == reversed_num',\r\n        difficulty: 'easy',\r\n        language: 'Python',\r\n      },\r\n  \r\n    // Add more problems like Binary Search, Knapsack Problem, etc., for all languages\r\n  ];\r\n  "],"mappings":"AAAA,MAAO,MAAM,CAAAA,KAAK,CAAG,CACjB;AACA,CACEC,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,UAAU,CACjBC,IAAI,CAAE,4FAA4F,CAClGC,UAAU,CAAE,MAAM,CAClBC,QAAQ,CAAE,YACZ,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,UAAU,CACjBC,IAAI,CAAE,8MAA8M,CACpNC,UAAU,CAAE,MAAM,CAClBC,QAAQ,CAAE,QACZ,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,UAAU,CACjBC,IAAI,CAAE,8WAA8W,CACpXC,UAAU,CAAE,MAAM,CAClBC,QAAQ,CAAE,KACZ,CAAC,CAED;AACA,CACEJ,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,6SAA6S,CACnTC,UAAU,CAAE,QAAQ,CACpBC,QAAQ,CAAE,YACZ,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,kOAAkO,CACxOC,UAAU,CAAE,QAAQ,CACpBC,QAAQ,CAAE,QACZ,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,+YAA+Y,CACrZC,UAAU,CAAE,QAAQ,CACpBC,QAAQ,CAAE,KACZ,CAAC,CAED;AACA,CACIJ,EAAE,CAAE,CAAC,CACLC,KAAK,CAAE,YAAY,CACnBC,IAAI,CAAE,2PAA2P,CACjQC,UAAU,CAAE,MAAM,CAClBC,QAAQ,CAAE,QACZ,CAEF;AAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}